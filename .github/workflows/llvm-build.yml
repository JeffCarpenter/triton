name: LLVM Build

env:
  SCCACHE_DIR: ${{ github.workspace }}/sccache

permissions:
  contents: read
  id-token: write

jobs:

  build:
    name: Build on ${{ matrix.config.runner }}
    runs-on: ${{ matrix.config.runs_on }}
    timeout-minutes: 240  # 4 hours

    strategy:
      fail-fast: true
      matrix:
        config:
        - {runner: 'Windows Latest', runs_on: 'windows-latest', target-os: 'windows', arch: 'x64'}

    steps:

    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        path: llvm-build

    - name: Fetch LLVM Commit Hash
      run: |
        $LLVM_COMMIT_HASH="$(cat llvm-build/cmake/llvm-hash.txt)"
        echo "Found LLVM commit hash: ${LLVM_COMMIT_HASH}"
        echo "llvm_commit_hash=${LLVM_COMMIT_HASH}" >> ${GITHUB_ENV}

        $SHORT_LLVM_COMMIT_HASH="${LLVM_COMMIT_HASH:0:8}"
        echo "Short LLVM commit hash: ${SHORT_LLVM_COMMIT_HASH}"
        echo "short_llvm_commit_hash=${SHORT_LLVM_COMMIT_HASH}" >> ${GITHUB_ENV}

        $INSTALL_DIR="llvm-${SHORT_LLVM_COMMIT_HASH}-${{ matrix.config.target-os }}-${{ matrix.config.arch }}"
        echo "LLVM installation directory name: ${INSTALL_DIR}"
        echo "llvm_install_dir=${INSTALL_DIR}" >> ${GITHUB_ENV}

    - name: Checkout LLVM
      uses: actions/checkout@v3
      with:
        repository: llvm/llvm-project
        path: llvm-project
        ref: ${{ env.llvm_commit_hash }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Set up MSVC
      if: matrix.config.arch == 'x64' && (matrix.config.target-os == 'windows')
      uses: ilammy/msvc-dev-cmd@v1.4.1
      with:
        arch: amd64

      run: |
        python3 -m pip install cmake ninja sccache
        mkdir -force ${{ env.SCCACHE_DIR }}
        rm -recurse -force ${{ env.SCCACHE_DIR }}/*

    - name: Enable Cache
      uses: actions/cache@v3
      with:
        path: ${{ env.SCCACHE_DIR }}
        key: ${{ matrix.config.target-os }}-${{ matrix.config.arch }}-${{ env.short_llvm_commit_hash }}
        restore-keys: ${{ matrix.config.target-os }}-${{ matrix.config.arch }}-

    - name: Configure, Build, Test, and Install LLVM (Windows)
      if: matrix.config.arch == 'x64' && (matrix.config.target-os == 'windows')
      run: >
        python3 -m pip install -r llvm-project/mlir/python/requirements.txt

        cmake -GNinja -Bllvm-project/build
        -DCMAKE_BUILD_TYPE=Release
        -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl
        -DCMAKE_INSTALL_PREFIX="${{ env.llvm_install_dir }}"
        -DLLVM_BUILD_UTILS=ON
        -DLLVM_BUILD_TOOLS=ON
        -DLLVM_ENABLE_ASSERTIONS=ON
        -DMLIR_ENABLE_BINDINGS_PYTHON=ON
        -DLLVM_ENABLE_PROJECTS="clang;mlir"
        -DLLVM_INSTALL_UTILS=ON
        -DLLVM_TARGETS_TO_BUILD="host;NVPTX"
        -DLLVM_ENABLE_TERMINFO=OFF
        llvm-project/llvm

        ninja -C llvm-project/build check-mlir install

        tar czf "${{ env.llvm_install_dir }}.tar.gz" "${{ env.llvm_install_dir }}"

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: llvm-${{ matrix.config.target-os }}-${{ matrix.config.arch }}
        path: |
          ${{ github.workspace }}/llvm-*.tar.gz

    - name: Dump Sccache Statistics
      run: sccache --show-stats
